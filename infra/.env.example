# =============================================================================
# Azure AI Foundry Project Configuration Template
# =============================================================================
# Copy this file to .env and update the values as needed
# The creation script will use these values, or defaults if not specified

# -----------------------------------------------------------------------------
# Azure Resource Configuration
# -----------------------------------------------------------------------------

# Primary Azure settings
RESOURCE_GROUP=rg-ai-nukesearch01
LOCATION=eastus2
PROJECT_TAG=ai-nukesearch01

# -----------------------------------------------------------------------------
# AI Services Configuration
# -----------------------------------------------------------------------------

# General AI Services (for Speech, Translation, Computer Vision, etc.)
AI_SERVICES_NAME=aiserv-ai-nukesearch01

# OpenAI Service (for GPT models, embeddings, DALL-E, etc.)
# This is your primary AI service for OpenAI capabilities
OPENAI_SERVICE_NAME=openai-nukesearch01

# -----------------------------------------------------------------------------
# Search and Storage Services
# -----------------------------------------------------------------------------

# Azure Cognitive Search
COGNITIVE_SEARCH_NAME=cog-ai-nukesearch01

# Key Vault for secrets management
KEYVAULT_NAME=kvainukesearch01

# App Configuration service
APPCONFIG_NAME=ac-ai-nukesearch01

# -----------------------------------------------------------------------------
# Supporting Infrastructure
# -----------------------------------------------------------------------------

# Log Analytics Workspace
LOG_WORKSPACE_NAME=log-ai-nukesearch01

# Container Registry
CONTAINER_REGISTRY_NAME=crainukesearch01

# Storage Account
STORAGE_ACCOUNT_NAME=stainukesearch01

# Application Insights
APPLICATION_INSIGHTS_NAME=ai-ai-nukesearch01

# ML Workspace (for AI Foundry)
ML_WORKSPACE_NAME=ml-ai-nukesearch01

# =============================================================================
# Azure AI Foundry Project Configuration Template
# =============================================================================
# Copy this file to .env and update the values as needed
# The creation script will use these values, or defaults if not specified

# -----------------------------------------------------------------------------
# Azure Resource Configuration
# -----------------------------------------------------------------------------

# Primary Azure settings
RESOURCE_GROUP=rg-ai-search01
LOCATION=eastus2
PROJECT_TAG=ai-search01

# -----------------------------------------------------------------------------
# AI Services Configuration
# -----------------------------------------------------------------------------

# General AI Services (for Speech, Translation, Computer Vision, etc.)
AI_SERVICES_NAME=aiserv-ai-search01

# OpenAI Service (for GPT models, embeddings, DALL-E, etc.)
# This is your primary AI service for OpenAI capabilities
OPENAI_SERVICE_NAME=openai-aisearch01

# -----------------------------------------------------------------------------
# Search and Storage Services
# -----------------------------------------------------------------------------

# Azure Cognitive Search
COGNITIVE_SEARCH_NAME=cog-ai-search01

# Key Vault for secrets management
KEYVAULT_NAME=kvaisearch01

# App Configuration service
APPCONFIG_NAME=ac-ai-search01

# -----------------------------------------------------------------------------
# Supporting Infrastructure
# -----------------------------------------------------------------------------

# Log Analytics Workspace
LOG_WORKSPACE_NAME=log-ai-search01

# Container Registry
CONTAINER_REGISTRY_NAME=craisearch01

# Storage Account
STORAGE_ACCOUNT_NAME=staisearch01

# Application Insights
APPLICATION_INSIGHTS_NAME=ai-ai-search01

# ML Workspace (for AI Foundry)
ML_WORKSPACE_NAME=ml-ai-search01

# -----------------------------------------------------------------------------
# Application Configuration (Either/Or Deployment Strategy)
# -----------------------------------------------------------------------------

# App Service Settings
WEB_APP_NAME=aisearch-webapp
APP_SERVICE_PLAN_NAME=asp-aisearch01
WEB_APP_URL=https://aisearch-webapp.azurewebsites.net

# Container Apps Settings
CONTAINER_APP_NAME=ca-aisearch-app
CONTAINER_APP_ENV_NAME=cae-aisearch01
CONTAINER_APP_API_NAME=ca-aisearch-api
CONTAINER_APP_URL=https://ca-aisearch-app.victoriousocean-12345678.eastus2.azurecontainerapps.io
CONTAINER_APP_API_URL=https://ca-aisearch-api.victoriousocean-12345678.eastus2.azurecontainerapps.io

# Main API Base URL (choose which deployment to use)
API_BASE_URL=https://aisearch-webapp.azurewebsites.net
OPENAPI_SPEC_URL=https://aisearch-webapp.azurewebsites.net/openapi.json

# DEPLOYMENT STRATEGY: Either/Or (Recommended)
# The infrastructure creates ALL hosting options:
# 1. App Service (Traditional PaaS): https://aisearch-webapp.azurewebsites.net
# 2. Container Apps (Serverless): https://ca-aisearch-app.[region].azurecontainerapps.io
# 3. Optional API Container: https://ca-aisearch-api.[region].azurecontainerapps.io
#
# Deploy your application to whichever platform fits your needs:
# - App Service: Traditional web apps, always-on, staging slots
# - Container Apps: Event-driven, scale-to-zero, pay-per-request
# - Separate API: Microservices architecture, independent scaling

# Container Apps Deployment Options:
# Option 1: Single Container (set CONTAINER_APP_API_NAME to empty)
# CONTAINER_APP_API_NAME=
#
# Option 2: Separate API Container (as shown above)
# CONTAINER_APP_API_NAME=ca-aisearch-api

# -----------------------------------------------------------------------------
# Runtime Configuration (for application use)
# -----------------------------------------------------------------------------

# These will be automatically populated in Key Vault by the creation script
# You can reference them in your application

# AI Foundry Project endpoint
# ai-foundry-project-endpoint will be set to:
# https://${AI_SERVICES_NAME}.services.ai.azure.com/api/projects/${PROJECT_TAG}

# OpenAI Service endpoint
# ai-services-endpoint will be set to:
# https://${OPENAI_SERVICE_NAME}.openai.azure.com/

# Cognitive Search endpoint
# cognitive-search-endpoint will be set to:
# https://${COGNITIVE_SEARCH_NAME}.search.windows.net/

# Speech Services endpoints
# speechtotext-endpoint will be set to:
# https://${LOCATION}.stt.speech.microsoft.com

# texttospeech-endpoint will be set to:
# https://${LOCATION}.tts.speech.microsoft.com

# Translation endpoint
# translator-endpoint will be set to:
# https://api.cognitive.microsofttranslator.com/

# -----------------------------------------------------------------------------
# Application Secrets (stored in Key Vault)
# -----------------------------------------------------------------------------

# The following secrets will be created in Key Vault automatically:
# - ai-services-key (OpenAI service key)
# - cognitive-search-admin-key
# - cognitive-search-query-key
# - flask-secret-key (you should update this)

# Generate a secure Flask secret key for production:
# python -c "import secrets; print(secrets.token_hex(32))"
FLASK_SECRET_KEY=your-secure-secret-key-here

# -----------------------------------------------------------------------------
# OpenAI Model Deployment Configuration
# -----------------------------------------------------------------------------

# COMPREHENSIVE OpenAI models that will be deployed automatically:

# === ESSENTIAL MODELS (Always deployed) ===
# ‚úÖ gpt-4o-mini: Fast, cost-effective chat model
# ‚úÖ text-embedding-ada-002: Reliable embeddings for RAG/search

# === RECOMMENDED MODELS (Usually deployed) ===
# ‚úÖ text-embedding-3-small: Newer, more efficient embeddings
# ‚úÖ whisper: Advanced speech-to-text
# ‚úÖ tts-1: Standard text-to-speech

# === ADVANCED MODELS (May be skipped due to quota/cost) ===
# üî∂ gpt-4o: Advanced reasoning (higher cost)
# üî∂ dall-e-3: Image generation
# üî∂ tts-1-hd: High-quality text-to-speech

# This gives you COMPLETE OpenAI coverage:
# üí¨ Chat & Reasoning
# üîç Embeddings & Search
# üé® Image Generation
# üé§ Speech-to-Text
# üîä Text-to-Speech

DEFAULT_OPENAI_MODELS=gpt-4o-mini,text-embedding-ada-002,text-embedding-3-small,whisper,tts-1,gpt-4o,dall-e-3,tts-1-hd

# OpenAI API version to use
AZURE_OPENAI_API_VERSION=2024-02-01

# -----------------------------------------------------------------------------
# General AI Services Capabilities (Built-in, No Deployment Needed)
# -----------------------------------------------------------------------------

# The General AI Services (aiserv-ai-nukesearch01) automatically includes:
# ‚úÖ Speech-to-Text (all languages)
# ‚úÖ Text-to-Speech (neural voices)
# ‚úÖ Translator (90+ languages)
# ‚úÖ Computer Vision (OCR, image analysis)
# ‚úÖ Content Moderator (text/image moderation)
# ‚úÖ Face API (detection, recognition)
# ‚úÖ Form Recognizer (document processing)
# ‚úÖ Custom Vision (if trained models exist)

# These are ready to use immediately after deployment with no additional setup!

# -----------------------------------------------------------------------------
# Development/Testing Configuration
# -----------------------------------------------------------------------------

# Set to 'development' for local testing
ENVIRONMENT=production

# Enable detailed logging
VERBOSE_LOGGING=false

# -----------------------------------------------------------------------------
# Usage Examples
# -----------------------------------------------------------------------------

# To create the infrastructure:
# python create_ai_foundry_project.py

# To see what would be created without making changes:
# python create_ai_foundry_project.py --dry-run

# To enable verbose output:
# python create_ai_foundry_project.py --verbose

# To only update Key Vault secrets (after manual changes):
# python create_ai_foundry_project.py --config-only

# To create everything with custom configuration:
# RESOURCE_GROUP=my-custom-rg python create_ai_foundry_project.py

# -----------------------------------------------------------------------------
# Key Vault Secret Names (for application reference)
# -----------------------------------------------------------------------------

# Your application should retrieve these secrets from Key Vault:
# - ai-foundry-project-endpoint
# - ai-services-endpoint
# - ai-services-key
# - cognitive-search-endpoint
# - cognitive-search-admin-key
# - cognitive-search-query-key
# - flask-secret-key
# - speechtotext-endpoint
# - texttospeech-endpoint
# - translator-endpoint

# Example Python code to retrieve secrets:
# from azure.keyvault.secrets import SecretClient
# from azure.identity import DefaultAzureCredential
#
# credential = DefaultAzureCredential()
# client = SecretClient(vault_url="https://kvaisearch01.vault.azure.net/", credential=credential)
#
# openai_endpoint = client.get_secret("ai-services-endpoint").value
# openai_key = client.get_secret("ai-services-key").value
# web_app_url = client.get_secret("web-app-url").value
# container_app_url = client.get_secret("container-app-url").value

# =============================================================================
# End of Configuration Template
# =============================================================================
